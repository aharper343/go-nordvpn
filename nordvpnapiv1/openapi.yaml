openapi: 3.0.0

info:
  title: NordVPN API
  version: 1.0.0

servers:
  - url: "https://api.nordvpn.com"

paths:

  /v1/servers:
    get:
      operationId: getServers
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/serverFilterByCountryId'
        - $ref: '#/components/parameters/serverFilterByGroupId'
        - $ref: '#/components/parameters/serverFilterByTechnologyId'
        - $ref: '#/components/parameters/serverFilterByStatus'
      responses:
        '200':
          $ref: '#/components/responses/ServersResponse'

  /v1/servers/recommendations:
    get:
      operationId: getRecommendedServers
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/serverFilterByCountryId'
        - $ref: '#/components/parameters/serverFilterByGroupId'
        - $ref: '#/components/parameters/serverFilterByTechnologyId'
        - $ref: '#/components/parameters/serverFilterByStatus'
      responses:
        '200':
          $ref: '#/components/responses/ServersResponse'

  /v1/servers/countries:
    get:
      operationId: getCountries
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/CountriesResponse'

  /v1/servers/groups:
    get:
      operationId: getGroups
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/GroupsResponse'

  /v1/technologies:
    get:
      operationId: getTechnologies
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/TechnologiesResponse'


components:

  parameters:

    limit:
      name: limit
      in: query
      description: The number of items to return
      required: false
      schema:
        type: integer
        format: int32

    offset:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set
      required: false
      schema:
        type: integer
        format: int32

    serverFilterByCountryId:
      name: "filters[country_id]"
      in: query
      description: Filter by country id the list of servers
      required: false
      schema:
        type: integer
        format: int32

    serverFilterByGroupId:
      name: "filters[servers_groups][id]"
      in: query
      description: Filter by group id the list of servers
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: integer
          format: int32

    serverFilterByTechnologyId:
      name: "filters[servers_technologies][id]"
      in: query
      description: Filter by technology id the list of servers
      required: false
      schema:
        type: integer
        format: int32

    serverFilterByStatus:
      name: "filters[status]"
      in: query
      description: Filter by country id the list of servers
      required: false
      schema:
        $ref: '#/components/schemas/ServerStatus'


  responses:
    ServersResponse:
      description: A list of servers
      content:
        application/json:
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/components/schemas/Server'

    CountriesResponse:
      description: A list of countries
      content:
        application/json:
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/components/schemas/Country'

    GroupsResponse:
      description: A list of groups
      content:
        application/json:
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/components/schemas/Group'

    TechnologiesResponse:
      description: A list of technologies
      content:
        application/json:
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/components/schemas/Technology'

  schemas:

    Server:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - station
        - ipv6_station
        - hostname
        - load
        - status
        - locations
        - services
        - technologies
        - groups
        - specifications
        - ips
      properties:
        id:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        name:
          type: string
        station:
          type: string
        ipv6_station:
            type: string
        hostname:
            type: string
        load:
            type: integer
            format: int32
        status:
          $ref: '#/components/schemas/ServerStatus'
        locations:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerLocation'
        services:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerService'
        technologies:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerTechnology'
        groups:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerGroup'
        specifications:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerSpecification'
        ips:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerIP'

    ServerStatus:
      type: string
      enum:
        - online
        - offline

    ServerLocation:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - latitude
        - longitude
        - country
      properties:
        id:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        country:
          $ref: '#/components/schemas/ServerCountry'

    ServerCountry:
      type: object
      required:
        - id
        - name
        - code
        - city
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        city:
          $ref: '#/components/schemas/ServerCity'

    ServerCity:
      type: object
      required:
        - id
        - name
        - latitude
        - longitude
        - dns_name
        - hub_score
      properties:
          id:
            type: integer
            format: int32
          name:
            type: string
          latitude:
            type: number
            format: double
          longitude:
            type: number
            format: double
          dns_name:
            type: string
          hub_score:
            type: number
            format: double

    ServerService:
      type: object
      required:
        - id
        - name
        - identifier
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        identifier:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    ServerTechnology:
      type: object
      required:
        - id
        - name
        - identifier
        - created_at
        - updated_at
        - metadata
        - pivot
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        identifier:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        metadata:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerTechnologyMetadata'
        pivot:
          $ref: '#/components/schemas/ServerTechnologyPivot'

    ServerTechnologyMetadata:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
        value:
          type: string

    ServerTechnologyPivot:
        type: object
        required:
          - technology_id
          - server_id
          - status
        properties:
          technology_id:
            type: integer
            format: int32
          server_id:
            type: integer
            format: int32
          status:
            type: string
            enum:
              - online
              - offline

    ServerGroup:
        type: object
        required:
          - id
          - created_at
          - updated_at
          - title
          - identifier
          - type
        properties:
          id:
            type: integer
            format: int32
          created_at:
            type: string
          updated_at:
            type: string
          title:
            type: string
          identifier:
            type: string
          type:
            $ref: '#/components/schemas/ServerGroupType'

    ServerGroupType:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - title
        - identifier
      properties:
        id:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        title:
          type: string
        identifier:
          type: string

    ServerSpecification:
      type: object
      required:
        - id
        - title
        - identifier
        - values
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        identifier:
          type: string
        values:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ServerSpecificationValue'

    ServerSpecificationValue:
        type: object
        required:
          - id
          - value
        properties:
          id:
            type: integer
            format: int32
          value:
            type: string

    ServerIP:
        type: object
        required:
          - id
          - created_at
          - updated_at
          - server_id
          - type
          - ip
        properties:
          id:
            type: integer
            format: int32
          created_at:
            type: string
          updated_at:
            type: string
          server_id:
            type: integer
            format: int32
          type:
            type: string
            enum:
              - entry
          ip:
            $ref: '#/components/schemas/ServerIPIP'

    ServerIPIP:
        type: object
        required:
          - id
          - ip
          - version
        properties:
          id:
            type: integer
            format: int32
          ip:
            type: string
          version:
            type: integer
            format: int32

    Country:
      type: object
      required:
        - id
        - name
        - code
        - serverCount
        - cities
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        serverCount:
          type: integer
          format: int32
        cities:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/City'

    City:
      type: object
      required:
        - id
        - name
        - latitude
        - longitude
        - dns_name
        - hub_score
        - serverCount
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        dns_name:
          type: string
        hub_score:
          type: number
          format: double
        serverCount:
          type: integer
          format: int32

    Group:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - title
        - identifier
        - type
      properties:
        id:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        title:
          type: string
        identifier:
          type: string
        type:
          $ref: '#/components/schemas/GroupType'

    GroupType:
      type: object
      required:
        - id
        - created_at
        - updated_at
        - title
        - identifier
      properties:
        id:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        title:
          type: string
        identifier:
          type: string

    Technology:
      type: object
      required:
        - id
        - name
        - internal_identifier
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        internal_identifier:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
